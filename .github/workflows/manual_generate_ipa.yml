name: Manual Generate iOS IPA (Side Loaded)

on:
  workflow_dispatch:
    inputs:
      buildVariant:
        type: choice
        description: 'Build Variant'
        required: true
        default: 'release'
        options:
        - release
        - debug

jobs:

  build-ipa:
    name: Build PPSSPP iOS IPA (${{ github.event.inputs.buildVariant }})
    runs-on: macos-latest
    env:
      GIT_DESCRIBE: ""

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up MoltenVK.xcframework (if custom)
        run: |
          if [ -d "../dev/build-molten/MoltenVK/Package/Release/MoltenVK/static/MoltenVK.xcframework" ]; then
            cp -r ../dev/build-molten/MoltenVK/Package/Release/MoltenVK/static/MoltenVK.xcframework ios/MoltenVK
          fi
        # Place your MoltenVK.xcframework as needed before this step or customize the path

      - name: Install cmake (if missing)
        run: |
          if ! command -v cmake > /dev/null; then
            brew install cmake
          fi

      - name: Generate Xcode project with CMake
        run: |
          mkdir -p build-ios
          cmake -DCMAKE_TOOLCHAIN_FILE=cmake/Toolchains/ios.cmake -GXcode -S . -B build-ios

      - name: Set provisioning profile and bundle id
        run: |
          # For sideloaded builds, you'll need to customize this in the Xcode project or automate via PlistBuddy/xcodeproj tools if desired
          echo "Make sure to set your Apple Developer account and a unique bundle id in the Xcode project later."

      - name: Build app in Xcode
        run: |
          xcodebuild -project build-ios/PPSSPP.xcodeproj \
            -scheme PPSSPP \
            -configuration ${{ github.event.inputs.buildVariant == 'release' && 'Release' || github.event.inputs.buildVariant == 'debug' && 'Debug' || 'Release' }} \
            -sdk iphoneos \
            -derivedDataPath build-ios/build
        # This invokes Xcode to build the app for device (not simulator)

      - name: Package .app as IPA
        run: |
          mkdir -p ppsspp/Payload
          APP_PATH=$(find build-ios/build/Build/Products -type d -name PPSSPP.app | head -n 1)
          if [ -d "$APP_PATH" ]; then
            cp -a "$APP_PATH" ppsspp/Payload/
            cd ppsspp
            zip -qry PPSSPP.ipa Payload
            cd ..
          else
            echo "App not found!"
            exit 1
          fi

      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: PPSSPP-iOS-${{ github.event.inputs.buildVariant }}.ipa
          path: ppsspp/PPSSPP.ipa
